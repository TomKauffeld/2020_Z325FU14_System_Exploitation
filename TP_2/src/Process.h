#ifndef __PROCESS_H__
#define __PROCESS_H__

#include "Instruction.h"
#include "Flags.h"

#define STATE_ZOMBIE  0b00000001
#define STATE_WAITING 0b00000010
#define STATE_WAITING_INS (STATE_WAITING | 0b00000100)
#define STATE_WAITING_RES (STATE_WAITING | 0b00001000)


typedef struct process {
	unsigned int id;
	unsigned int parent_id;
	unsigned int instruction_pointer;
	unsigned int nb_instructions;
	Flags state;
	Instruction** instructions;
} Process;

Process* process_init(unsigned int id, unsigned int parent_id);

Instruction* process_step(Process* process);

Instruction* process_add_instruction(Process* process, Bool valid, Bool block);

void process_set_state(Process* process, Flags flags);

void process_remove_state(Process* process, Flags flags);

Bool process_has_state(Process* process, Flags flags);

void process_destroy(Process* process);



#endif
