#ifndef __SYSTEM_H__
#define __SYSTEM_H__

#include "Process.h"
#include "Bool.h"
#include "ProcessList.h"
#include "InterruptionArray.h"


typedef struct system {
	unsigned int size_processes;
	Process** processes;
	Process* current;
	unsigned int instructions_left;
	ProcessList* ready;
	InterruptionArray* interruptions;
} System;



System* system_init();

unsigned int system_find_free_id(System* system);

Process* system_create_process(System* system, unsigned int parent_id);

Process* system_get_process(System* system, unsigned int id);

void system_ordonancement(System* system);

void system_handle_interruption(System* system);

void system_run_instruction(System* system);

void system_step(System* system);

Bool system_destroy_process(System* system, unsigned int id);

Bool system_can_continue(System* system);

void system_destroy(System* system);





#endif
